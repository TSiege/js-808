{"version":3,"sources":["components/stepButton/index.jsx","components/track/index.jsx","components/sequences/index.jsx","utils/index.js","utils/data.js","components/controller/index.jsx","index.js"],"names":["StepButton","toggleOn","props","toggleStepState","step","on","this","isOn","className","playing","onClick","React","Component","Track","a","sequence","name","updatedSequence","playEffect","toggleSequence","console","log","prev","Number","isInteger","isPlaying","steps","i","playingClassname","push","key","renderStepButtons","Sequence","handleChange","value","target","setState","onSelect","state","sequences","map","onChange","renderOptions","stepPerMs","bpm","deepClone","obj","JSON","parse","stringify","TRACKS","SEQUENCE_NAMES","SEQUENCES","Kick","Snare","None","Array","fill","Controller","interval","stop","clearInterval","togglePlay","setInterval","updateBpm","oldInterval","isNaN","selectSequence","innerHTML","width","height","id","viewBox","xmlns","d","transform","renderPlayButton","renderSteps","renderTracks","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39e59102.chunk.js","sourcesContent":["import React from 'react'\nimport './styles.css'\n\nexport default class StepButton extends React.Component {\n  toggleOn = () => {\n    const { toggleStepState, step } = this.props\n    toggleStepState(step)\n  }\n\n  render() {\n    const on = this.props.isOn ? 'on' : ''\n    return <button className={`step-button ${this.props.playing} ${on}`} onClick={this.toggleOn}></button>\n  }\n}\n","import React from 'react'\nimport StepButton from '../stepButton'\nimport './styles.css'\n\nexport default class Track extends React.Component {\n  playEffect() {\n    // noop for now\n    console.log(`${this.props.name} sound!`)\n  }\n\n  componentDidUpdate(prev) {\n    if (Number.isInteger(prev.step) && prev.isPlaying) {\n      const { sequence } = this.props\n      if (sequence[prev.step]) {\n        this.playEffect()\n      }\n    }\n  }\n\n  toggleStepState = async (step) => {\n    const { sequence, name } = this.props\n    const updatedSequence = [...sequence]\n    const isPlaying = !updatedSequence[step]\n    if (isPlaying) {\n      this.playEffect()\n    }\n    this.props.toggleSequence(name, step)\n  }\n\n  renderStepButtons() {\n    const { step, sequence } = this.props\n    const steps = []\n    for (let i = 0; i < 16; i++) {\n      const playingClassname = step === i ? 'playing' : ''\n      steps.push(\n        <StepButton\n          key={i}\n          step={i}\n          isOn={sequence[i]}\n          playing={playingClassname}\n          toggleStepState={this.toggleStepState}\n        />\n      )\n    }\n    return steps\n  }\n\n  render() {\n    return (\n      <div className=\"track\">\n        <h3>{this.props.name}</h3>\n        <span className=\"step-buttons\">\n          {this.renderStepButtons()}\n        </span>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport './styles.css'\n\nexport default class Sequence extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { value: this.props.sequences[0] }\n  }\n\n  handleChange = ({ target: { value } }) => {\n    this.setState({ value })\n    this.props.onSelect(value)\n  }\n\n  renderOptions() {\n    return this.props.sequences.map((name, i ) => <option key={i} value={name}>{name}</option>)\n  }\n\n  render() {\n    return (\n      <select className=\"Sequence\" value={this.state.value} onChange={this.handleChange}>\n        {this.renderOptions()}\n      </select>\n    )\n  }\n}\n","export function stepPerMs(bpm = 128) {\n  return (((60 / bpm) * 4) / 16) * 1000\n}\n\nexport function deepClone(obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n","export const TRACKS = ['Kick', 'Snare', 'Open Hat', 'Closed Hat']\nexport const SEQUENCE_NAMES = ['Sequence 1', 'Sequence 2', 'Sequence 3', 'None']\nexport const SEQUENCES = {\n  'Sequence 1': {\n    Kick:         [false, true, false, false, true, true, false, true, false, false, false, false, true, false, true, false],\n    Snare:        [true, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false],\n    'Open Hat':   [false, false, true, false, true, false, false, true, false, true, false, false, true, false, true, false],\n    'Closed Hat': [true, false, false, true, false, false, true, true, false, false, false, true, false, false, false, true],\n  },\n  'Sequence 2': {\n    Kick:         [false, true, false, false, true, true, false, true, false, false, false, true, true, false, true, false],\n    Snare:        [false, false, false, true, false, true, false, true, false, true, false, true, false, true, true, false],\n    'Open Hat':   [false, true, true, false, true, false, false, true, false, true, false, true, true, false, true, false],\n    'Closed Hat': [true, false, false, true, true, false, true, true, false, false, false, true, false, false, false, true],\n  },\n  'Sequence 3': {\n    Kick:         [true, true, false, false, true, false, true, true, false, false, false, true, true, false, true, false],\n    Snare:        [true, true, false, true, false, true, false, true, false, false, true, true, false, true, true, false],\n    'Open Hat':   [false, false, true, false, false, false, false, true, false, true, false, true, false, false, true, false],\n    'Closed Hat': [false, false, false, true, true, false, true, true, false, false, true, false, true, false, false, true],\n  },\n  None: {\n    Kick:         new Array(16).fill(false),\n    Snare:        new Array(16).fill(false),\n    'Open Hat':   new Array(16).fill(false),\n    'Closed Hat': new Array(16).fill(false),\n  }\n}\n","import React from 'react'\nimport Track from '../track'\nimport Sequence from '../sequences'\nimport { deepClone, stepPerMs } from '../../utils'\nimport { TRACKS, SEQUENCES, SEQUENCE_NAMES } from '../../utils/data'\nimport './styles.css'\n\nexport default class Controller extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      bpm: 128,\n      step: null,\n      interval: null,\n      isPlaying: false,\n      ...deepClone(SEQUENCES['Sequence 1'])\n    }\n  }\n\n  interval = () => {\n    const { step } = this.state\n    if (step === null || step === 15) {\n      this.setState({ step: 0 })\n    } else {\n      this.setState({ step: step + 1 })\n    }\n  }\n\n  stop = () => {\n    const { interval } = this.state\n    clearInterval(interval)\n    this.setState({ interval: null, isPlaying: false, step: null })\n  }\n\n  togglePlay = () => {\n    const { isPlaying, interval, bpm } = this.state\n    if (isPlaying) {\n      clearInterval(interval)\n      this.setState({ isPlaying: false, interval: null })\n    } else {\n      const interval = setInterval(this.interval, stepPerMs(bpm))\n      this.setState({ isPlaying: true, interval })\n    }\n  }\n\n  updateBpm = ({ target: { value }}) => {\n    const { interval: oldInterval, isPlaying } = this.state\n    if (isNaN(Number(value))) {\n      return\n    }\n    if (isPlaying) {\n      clearInterval(oldInterval)\n      const interval = setInterval(this.interval, stepPerMs(value))\n      this.setState({ interval, bpm: value })\n    } else {\n      this.setState({ bpm: value })\n    }\n  }\n\n  selectSequence = (name) => {\n    this.setState({ ...deepClone(SEQUENCES[name]) })\n  }\n\n  toggleSequence = (name, i) => {\n    const currentSequence = this.state[name]\n    const updatedSequence = deepClone(currentSequence)\n    const step = updatedSequence[i]\n    updatedSequence[i] = !step\n    this.setState({ [name]: updatedSequence })\n  }\n\n  renderPlayButton() {\n    const { isPlaying } = this.state\n    const innerHTML = isPlaying ?\n      <svg width=\"15\" height=\"15\" id=\"Capa_1\"  viewBox=\"0 0 424.236 424.236\" xmlns=\"http://www.w3.org/2000/svg\"><path id=\"path-1_5_\" d=\"m247.471 0h176.765v424.236h-176.765z\" transform=\"translate(9 2)\"/><path id=\"path-1_4_\" d=\"m0 0h176.765v424.236h-176.765z\" transform=\"translate(2 2)\"/></svg> :\n      <svg width=\"20\" height=\"20\" viewBox=\"0 0 494.942 494.942\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m35.353 0 424.236 247.471-424.236 247.471z\"/></svg>\n    return <button className=\"play\" onClick={this.togglePlay}>{innerHTML}</button>\n  }\n\n  renderSteps() {\n    const { step } = this.state\n    const steps = []\n    for (let i = 0; i < 16; i++) {\n      const playingClassname = step === i ? 'playing' : ''\n      steps.push(<span key={i} className={`step ${playingClassname}`}>{i + 1}</span>)\n    }\n    return steps\n  }\n\n  renderTracks() {\n    const { step, isPlaying } = this.state\n    return TRACKS.map((name, i) => {\n      const sequence = this.state[name]\n      return <Track\n        key={i}\n        name={name}\n        step={step}\n        isPlaying={isPlaying}\n        sequence={sequence}\n        toggleSequence={this.toggleSequence}\n      />\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"controller\">\n        <div className=\"header\">\n          <h1 className=\"title\">JS-808</h1>\n          <span className=\"toolbar\">\n            <button className=\"stop\" onClick={this.stop}>\n              <svg width=\"15\" height=\"15\" id=\"Layer_1\" viewBox=\"0 0 506.1 506.1\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m489.609 0h-473.118c-9.108 0-16.491 7.383-16.491 16.491v473.118c0 9.107 7.383 16.491 16.491 16.491h473.119c9.107 0 16.49-7.383 16.49-16.491v-473.118c0-9.108-7.383-16.491-16.491-16.491z\"/></svg>\n            </button>\n            {this.renderPlayButton()}\n            <input value={this.state.bpm} onChange={this.updateBpm}/>\n            <span className=\"bpm\">BPM</span>\n            <Sequence sequences={SEQUENCE_NAMES} onSelect={this.selectSequence}/>\n          </span>\n        </div>\n        <div className=\"steps\">\n          {this.renderSteps()}\n        </div>\n        <section className=\"tracks\">\n          {this.renderTracks()}\n        </section>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Controller from './components/controller'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Controller />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}